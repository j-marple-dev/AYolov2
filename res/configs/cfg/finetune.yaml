train:
  weights: '/home/user/ayolov2/exp/2023_0117_runs2/weights/best.pt'  # Model weight path
  data: ''  # data config path
  epochs: 50
  batch_size: 64
  image_size: 640   # Train, val image size
  rect: false  # Use rectangular training
  resume: false  # resume previous training
  validate_period: 1  # Run validation on every x epoch
  auto_anchor: true  # Check anchors and auto-fix anchors
  cache_image: null  # Use caching images. This should be either 'mem', 'disk', 'dynamic_mem', 'dynamic_disk'
  n_skip: 0  # skip image by n which reduces images to be used
  image_weights: false  # Use weighted image selection for training
  device: ""  # CUDA device. "" will use all GPUs. EX) '0,2' or 'cpu'
  multi_scale: false  # Use multi scaled training (+/- 50% image size)
  single_cls: false  # Train multi-class data as single-class
  sync_bn: false  # Use SyncBatchNorm, only available in DDP mode
  workers: 18  # Maximum number of dataloader workers
  linear_lr: false  # Use linear learning rate
  label_smoothing: 0.0  # Label smoothing epsilon
  freeze: 0  # Number of layers to freeze.
  save_period: -1  # Save checkpoint on every x epochs (disabled if < 1)
  log_dir: "exp"  # Default log root directory
  plot: true  # plot results or not.
  label_type: "labels"  # Label type to use ("labels", "segments")
  patience: 30  # for early stopping


hyper_params:
  optimizer: 'SGD'
  optimizer_params:
    lr: 0.0032  # lr0
    momentum: 0.843
    nesterov: true
  # optimizer: 'Adam'
  # optimizer_param:
  #   betas: [0.937, 0.999]

  lrf: 0.12  # final OneCycleLR learning rate (lr0 * lrf)
  momentum: 0.843  # SGD momentum/Adam beta1
  weight_decay: 0.00036  # optimizer weight decay 5e-4
  warmup_epochs: 2.0  # warmup epochs (fractions ok)
  warmup_momentum: 0.5  # warmup initial momentum
  warmup_bias_lr: 0.05  # warmup initial bias lr
  box: 0.0296  # box loss gain
  cls: 0.243  # cls loss gain
  cls_pw: 0.631  # cls BCELoss positive_weight
  obj: 0.301  # obj loss gain (scale with pixels)
  obj_pw: 0.911  # obj BCELoss positive_weight
  conf_t: 0.1  # confidence threshold
  iou_t: 0.20  # IoU training threshold
  anchor_t: 2.91  # anchor-multiple threshold
  # anchors: 3  # anchors per output layer (0 to ignore)
  fl_gamma: 0.0  # focal loss gamma (efficientDet default gamma=1.5)


yolo_augmentation:
  augment: true  # Use augmentation
  hsv_h: 0.0138  # image HSV-Hue augmentation (fraction)
  hsv_s: 0.664  # image HSV-Saturation augmentation (fraction)
  hsv_v: 0.464  # image HSV-Value augmentation (fraction)
  degrees: 0.373  # image rotation (+/- deg)
  translate: 0.245  # image translation (+/- fraction)
  scale: 0.898  # image scale (+/- gain)
  shear: 0.602  # image shear (+/- deg)
  perspective: 0.0  # image perspective (+/- fraction), range 0-0.001
  # flipud: 0.0  # image flip up-down (probability)
  # fliplr: 0.5  # image flip left-right (probability)
  mosaic: 1.0  # image mosaic (probability)
  mixup: 0.243  # image mixup (probability)
  copy_paste: 0.1  # segment copy-paste (probability)
  copy_paste2:  # config for copy-paste2
    p: 0.0  # copy-paste probability per object.
    n_img: 3  # Number of images to be used for copy-paste2
    area_thr: 200  # area threshold for copy paste (ex. 2 * 5 = 10)
    ioa_thr: 0.3  # IoA threshold for existing object and pasted object.
    scale_min: 0.35  # scale factor min value
    scale_max: 1.0  # scale factor max value


augmentation:
  - policy:
      Blur: {p: 0.01}
      MedianBlur: {p: 0.01}
      ToGray: {p: 0.01}
      CLAHE: {p: 0.01}
      RandomBrightnessContrast: {p: 0.0}
      RandomGamma: {p: 0.0}
      ImageCompression: {quality_lower: 75, p: 0.0}
    prob: 1.0
  - policy:
      HorizontalFlip: {p: 0.5}
      VerticalFlip: {p: 0.00856}
    prob: 1.0
